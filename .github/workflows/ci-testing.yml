# YOLOv5 ðŸš€ by Ultralytics, GPL-3.0 license
# YOLOv5 Continuous Integration (CI) GitHub Actions tests

name: YOLOv5 CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]
        model: [yolov5s]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt --extra-index-url https://download.pytorch.org/whl/cpu
          python --version
          pip --version
          pip list
      - name: Check environment
        run: |
          python -c "import utils; utils.notebook_init()"
          echo "RUNNER_OS is $RUNNER_OS"
          echo "GITHUB_EVENT_NAME is $GITHUB_EVENT_NAME"
          echo "GITHUB_WORKFLOW is $GITHUB_WORKFLOW"
          echo "GITHUB_ACTOR is $GITHUB_ACTOR"
          echo "GITHUB_REPOSITORY is $GITHUB_REPOSITORY"
          echo "GITHUB_REPOSITORY_OWNER is $GITHUB_REPOSITORY_OWNER"
      - name: Run tests
        shell: bash
        run: |
          # export PYTHONPATH="$PWD"  # to run '$ python *.py' files in subdirectories
          d=cpu  # device
          model=${{ matrix.model }}
          best=runs/train/exp/weights/best.pt
          # Train
          python train.py --img 64 --batch 32 --weights $model.pt --cfg $model.yaml --epochs 1 --device $d
          # Val
          python val.py --img 64 --batch 32 --weights $model.pt --device $d
          python val.py --img 64 --batch 32 --weights $best --device $d
          # Detect
          python detect.py --weights $model.pt --device $d
          python detect.py --weights $best --device $d
          python hubconf.py  # hub
          # Export
          python models/yolo.py --cfg $model.yaml  # build PyTorch model
          # python export_coreml.py --weights $model.pt  # export CoreML model TODO: enable when merged
          # Python
          python - <<EOF
          import torch
          model = torch.hub.load('.', 'custom', path='$model', source='local')
          print(model('data/images/bus.jpg'))
          model = torch.hub.load('.', 'custom', path='$best', source='local')
          print(model('data/images/bus.jpg'))
          EOF
